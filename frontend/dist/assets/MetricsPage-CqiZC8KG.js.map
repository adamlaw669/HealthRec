{"version":3,"file":"MetricsPage-CqiZC8KG.js","sources":["../../app/features/metrics/DoctorReport.tsx","../../components/ui/card.tsx","../../components/ui/LineChart.tsx","../../app/features/metrics/MetricsPage.tsx"],"sourcesContent":["\"use client\"\nimport { useState } from \"react\"\nimport { healthAPI } from \"../../api/api\"\nimport { FaEnvelope, FaInfoCircle, FaClipboard, FaCheckCircle, FaEdit } from \"react-icons/fa\"\n\ninterface DoctorReportProps {\n  onClose: () => void\n}\n\nexport const DoctorReport = ({ onClose }: DoctorReportProps) => {\n  const [email, setEmail] = useState(\"\")\n  const [selectedMetrics, setSelectedMetrics] = useState<string[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [isSuccess, setIsSuccess] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [customNotes, setCustomNotes] = useState(\"\")\n\n  const handleMetricToggle = (metric: string) => {\n    if (selectedMetrics.includes(metric)) {\n      setSelectedMetrics(selectedMetrics.filter((m) => m !== metric))\n    } else {\n      setSelectedMetrics([...selectedMetrics, metric])\n    }\n  }\n\n  const handleGenerateReport = async () => {\n    try {\n      await healthAPI.getDoctorReport(\n        email,\n        selectedMetrics,\n        customNotes\n      );\n    } catch (error) {\n      console.error(\"Error generating report:\", error);\n      throw error;\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n    setError(null)\n\n    try {\n      await handleGenerateReport()\n      setIsSuccess(true)\n    } catch (err) {\n      setError(typeof err === \"string\" ? err : \"Failed to generate report. Please try again.\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  if (isSuccess) {\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-6 border border-gray-200 dark:border-gray-700\">\n          <div className=\"text-center\">\n            <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 dark:bg-green-900\">\n              <FaCheckCircle className=\"h-6 w-6 text-green-600 dark:text-green-300\" />\n            </div>\n            <h3 className=\"mt-4 text-lg font-medium text-gray-900 dark:text-white\">Report Sent Successfully!</h3>\n            <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">\n              Your health report has been sent to {email}. Your doctor will receive it shortly.\n            </p>\n            <div className=\"mt-6\">\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:text-sm\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full p-6 border border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white flex items-center\">\n            <FaClipboard className=\"mr-2 text-blue-600 dark:text-blue-400\" />\n            Generate Weekly Doctor's Report\n          </h2>\n          <button onClick={onClose} className=\"text-gray-400 hover:text-gray-500 focus:outline-none\">\n            <span className=\"sr-only\">Close</span>\n            <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"mb-4 p-3 bg-blue-50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-md\">\n          <p className=\"text-sm\">\n            <FaInfoCircle className=\"inline-block mr-1\" />\n            This report will include your health data for the past week.\n          </p>\n        </div>\n\n        {error && (\n          <div className=\"mb-4 p-3 bg-red-100 dark:bg-red-900 text-red-700 dark:text-red-300 rounded-md\">{error}</div>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label htmlFor=\"doctor-email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Doctor's Email Address\n            </label>\n            <div className=\"relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <FaEnvelope className=\"h-5 w-5 text-gray-400 dark:text-gray-500\" />\n              </div>\n              <input\n                type=\"email\"\n                id=\"doctor-email\"\n                className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white sm:text-sm\"\n                placeholder=\"doctor@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </div>\n            <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n              Your health data will be sent to this email address.\n            </p>\n          </div>\n\n          <div className=\"mb-4\">\n            <span className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Select Health Metrics to Include\n            </span>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"steps\"\n                  name=\"steps\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 focus:ring-offset-0 border-gray-300 dark:border-gray-600 dark:bg-gray-700 rounded\"\n                  checked={selectedMetrics.includes(\"steps\")}\n                  onChange={() => handleMetricToggle(\"steps\")}\n                />\n                <label htmlFor=\"steps\" className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n                  Steps & Activity\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  id=\"heart-rate\"\n                  name=\"heart-rate\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 focus:ring-offset-0 border-gray-300 dark:border-gray-600 dark:bg-gray-700 rounded\"\n                  checked={selectedMetrics.includes(\"heart-rate\")}\n                  onChange={() => handleMetricToggle(\"heart-rate\")}\n                />\n                <label htmlFor=\"heart-rate\" className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n                  Heart Rate\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  id=\"sleep\"\n                  name=\"sleep\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 focus:ring-offset-0 border-gray-300 dark:border-gray-600 dark:bg-gray-700 rounded\"\n                  checked={selectedMetrics.includes(\"sleep\")}\n                  onChange={() => handleMetricToggle(\"sleep\")}\n                />\n                <label htmlFor=\"sleep\" className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n                  Sleep\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  id=\"weight\"\n                  name=\"weight\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 focus:ring-offset-0 border-gray-300 dark:border-gray-600 dark:bg-gray-700 rounded\"\n                  checked={selectedMetrics.includes(\"weight\")}\n                  onChange={() => handleMetricToggle(\"weight\")}\n                />\n                <label htmlFor=\"weight\" className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n                  Weight & BMI\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  id=\"nutrition\"\n                  name=\"nutrition\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 focus:ring-offset-0 border-gray-300 dark:border-gray-600 dark:bg-gray-700 rounded\"\n                  checked={selectedMetrics.includes(\"nutrition\")}\n                  onChange={() => handleMetricToggle(\"nutrition\")}\n                />\n                <label htmlFor=\"nutrition\" className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n                  Nutrition & Calories\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {/* Custom Notes Section */}\n          <div className=\"mb-4\">\n            <label htmlFor=\"custom-notes\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Additional Notes for Your Doctor\n            </label>\n            <div className=\"relative rounded-md shadow-sm\">\n              <div className=\"absolute top-3 left-3 pointer-events-none\">\n                <FaEdit className=\"h-5 w-5 text-gray-400 dark:text-gray-500\" />\n              </div>\n              <textarea\n                id=\"custom-notes\"\n                rows={4}\n                className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white sm:text-sm\"\n                placeholder=\"Add any additional information you'd like your doctor to know...\"\n                value={customNotes}\n                onChange={(e) => setCustomNotes(e.target.value)}\n              />\n            </div>\n            <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n              These notes will be included in your report to provide additional context for your doctor.\n            </p>\n          </div>\n\n          <div className=\"mt-6\">\n            <button\n              type=\"submit\"\n              disabled={isLoading || selectedMetrics.length === 0 || !email}\n              className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${\n                isLoading || selectedMetrics.length === 0 || !email\n                  ? \"bg-blue-400 cursor-not-allowed\"\n                  : \"bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              }`}\n            >\n              {isLoading ? (\n                <>\n                  <svg\n                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle\n                      className=\"opacity-25\"\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"4\"\n                    ></circle>\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    ></path>\n                  </svg>\n                  Sending...\n                </>\n              ) : (\n                \"Send Report to Doctor\"\n              )}\n            </button>\n          </div>\n\n          <div className=\"mt-4\">\n            <p className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\n              By sending this report, you consent to sharing your health data with your healthcare provider. Your data\n              is encrypted and secure.\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default DoctorReport\n\n","import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import { Line } from \"react-chartjs-2\"\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\"\n\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler)\n\ninterface LineChartProps {\n  data: {\n    labels: string[]\n    datasets: {\n      label: string\n      data: number[]\n      fill?: boolean\n      backgroundColor?: string\n      borderColor?: string\n      tension?: number\n    }[]\n  }\n  options?: any\n}\n\nexport const LineChart = ({ data, options = {} }: LineChartProps) => {\n  const defaultOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\" as const,\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  }\n\n  return <Line data={data} options={{ ...defaultOptions, ...options }} />\n} ","\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\"\nimport Sidebar from \"../../components/Sidebar\"\nimport { useSidebar } from \"../../context/SidebarContext\"\nimport { FaMoon, FaSun, FaBrain, FaWalking, FaHeartbeat, FaInfoCircle, FaPlus, FaBed, FaWeight, FaAppleAlt, FaRunning } from \"react-icons/fa\"\nimport DoctorReport from \"./DoctorReport\"\nimport { getInitialTheme, toggleTheme } from \"../../utils/theme-utils\"\nimport { healthAPI } from \"../../api/api\"\nimport AIStatus from \"../../components/AIStatus\"\nimport { Card } from \"../../../components/ui/card\"\nimport { LineChart } from \"../../../components/ui/LineChart\"\n\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler)\n\ninterface MetricsData {\n  steps: {\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      fill?: boolean;\n      backgroundColor?: string;\n      borderColor?: string;\n      tension?: number;\n    }[];\n  };\n  heartRate: {\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      fill?: boolean;\n      backgroundColor?: string;\n      borderColor?: string;\n      tension?: number;\n    }[];\n  };\n  sleep: {\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      fill?: boolean;\n      backgroundColor?: string;\n      borderColor?: string;\n      tension?: number;\n    }[];\n  };\n  weight: {\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      fill?: boolean;\n      backgroundColor?: string;\n      borderColor?: string;\n      tension?: number;\n    }[];\n  };\n  calories: {\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      fill?: boolean;\n      backgroundColor?: string;\n      borderColor?: string;\n      tension?: number;\n    }[];\n  };\n  activeMinutes: {\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      fill?: boolean;\n      backgroundColor?: string;\n      borderColor?: string;\n      tension?: number;\n    }[];\n  };\n}\n\nconst Metrics: React.FC = () => {\n  const { isSidebarOpen } = useSidebar()\n  const [showDoctorReport, setShowDoctorReport] = useState(false)\n  const [darkMode, setDarkMode] = useState(false)\n  const [timeRange, setTimeRange] = useState(\"week\")\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [isAiOnline] = useState(false)\n  const [metrics, setMetrics] = useState<MetricsData | null>(null)\n  const [aiTips, setAiTips] = useState<string[]>([])\n  const [correlationInsights, setCorrelationInsights] = useState<string[]>([])\n  const [isAddMenuOpen, setIsAddMenuOpen] = useState(false)\n  const [selectedMetric, setSelectedMetric] = useState<string | null>(null)\n  const [metricValue, setMetricValue] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  // Initialize theme on component mount\n  useEffect(() => {\n    const initialDarkMode = getInitialTheme()\n    setDarkMode(initialDarkMode)\n  }, [])\n\n  const handleToggleTheme = () => {\n    const newDarkMode = toggleTheme(darkMode)\n    setDarkMode(newDarkMode)\n  }\n\n  // Fetch metrics data\n  useEffect(() => {\n    const fetchMetricsData = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const userData = localStorage.getItem(\"user\");\n        if (!userData) {\n          throw new Error(\"User not logged in\");\n        }\n\n        const [stepsData, heartRateData, sleepData, weightData, caloriesData, activityData] = await Promise.all([\n          healthAPI.getStepData(),\n          healthAPI.getHeartRateData(),\n          healthAPI.getSleepData(),\n          healthAPI.getWeightData(),\n          healthAPI.getCaloriesData(),\n          healthAPI.getActivityData()\n        ]);\n\n        // Initialize with empty arrays if data is undefined\n        const newMetrics: MetricsData = {\n          steps: {\n            labels: stepsData?.labels || [],\n            datasets: [{\n              label: \"Steps\",\n              data: stepsData?.values || [],\n              fill: true,\n              backgroundColor: 'rgba(30, 58, 138, 0.1)',\n              borderColor: \"#1e3a8a\",\n              tension: 0.3,\n            }]\n          },\n          heartRate: {\n            labels: heartRateData?.labels || [],\n            datasets: [{\n              label: \"Heart Rate\",\n              data: heartRateData?.values || [],\n              fill: true,\n              backgroundColor: 'rgba(239, 68, 68, 0.1)',\n              borderColor: \"#ef4444\",\n              tension: 0.3,\n            }]\n          },\n          sleep: {\n            labels: sleepData?.labels || [],\n            datasets: [{\n              label: \"Sleep\",\n              data: sleepData?.values || [],\n              fill: true,\n              backgroundColor: 'rgba(99, 102, 241, 0.1)',\n              borderColor: \"#6366f1\",\n              tension: 0.3,\n            }]\n          },\n          weight: {\n            labels: weightData?.labels || [],\n            datasets: [{\n              label: \"Weight\",\n              data: weightData?.values || [],\n              fill: true,\n              backgroundColor: 'rgba(34, 197, 94, 0.1)',\n              borderColor: \"#22c55e\",\n              tension: 0.3,\n            }]\n          },\n          calories: {\n            labels: caloriesData?.labels || [],\n            datasets: [{\n              label: \"Calories\",\n              data: caloriesData?.values || [],\n              fill: true,\n              backgroundColor: 'rgba(249, 115, 22, 0.1)',\n              borderColor: \"#f97316\",\n              tension: 0.3,\n            }]\n          },\n          activeMinutes: {\n            labels: activityData?.labels || [],\n            datasets: [{\n              label: \"Active Minutes\",\n              data: activityData?.values || [],\n              fill: true,\n              backgroundColor: 'rgba(168, 85, 247, 0.1)',\n              borderColor: \"#a855f7\",\n              tension: 0.3,\n            }]\n          }\n        };\n\n        setMetrics(newMetrics);\n\n        // Fetch AI tips\n        try {\n          const tips = await healthAPI.getHealthRecommendation();\n          setAiTips(tips?.recommendations?.general?.insights || []);\n          setCorrelationInsights(tips?.recommendations?.correlation || []);\n        } catch (error) {\n          console.error(\"Error fetching AI tips:\", error);\n          setAiTips([]);\n          setCorrelationInsights([]);\n        }\n\n      } catch (error) {\n        console.error(\"Error fetching metrics data:\", error);\n        setError(\"Failed to load metrics data. Please try again later.\");\n        setMetrics(null);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMetricsData();\n  }, [timeRange]);\n\n  const handleAddMetric = async (metric: string) => {\n    setSelectedMetric(metric)\n    setIsAddMenuOpen(false)\n  }\n\n  const handleSubmitMetric = async () => {\n    if (!selectedMetric || !metricValue) return\n\n    setIsSubmitting(true)\n    try {\n      await healthAPI.addMetric(selectedMetric, parseFloat(metricValue))\n      setMetricValue(\"\")\n      setSelectedMetric(null)\n      // Refresh metrics data\n      const fetchMetricsData = async () => {\n        setIsLoading(true)\n        setError(null)\n        try {\n          const [stepsData, heartRateData, sleepData, weightData, caloriesData, activityData] = await Promise.all([\n            healthAPI.getStepData(),\n            healthAPI.getHeartRateData(),\n            healthAPI.getSleepData(),\n            healthAPI.getWeightData(),\n            healthAPI.getCaloriesData(),\n            healthAPI.getActivityData()\n          ]);\n\n          const newMetrics: MetricsData = {\n            steps: {\n              labels: stepsData?.labels || [],\n              datasets: [{\n                label: \"Steps\",\n                data: stepsData?.values || [],\n                fill: true,\n                backgroundColor: 'rgba(30, 58, 138, 0.1)',\n                borderColor: \"#1e3a8a\",\n                tension: 0.3,\n              }]\n            },\n            heartRate: {\n              labels: heartRateData?.labels || [],\n              datasets: [{\n                label: \"Heart Rate\",\n                data: heartRateData?.values || [],\n                fill: true,\n                backgroundColor: 'rgba(239, 68, 68, 0.1)',\n                borderColor: \"#ef4444\",\n                tension: 0.3,\n              }]\n            },\n            sleep: {\n              labels: sleepData?.labels || [],\n              datasets: [{\n                label: \"Sleep\",\n                data: sleepData?.values || [],\n                fill: true,\n                backgroundColor: 'rgba(99, 102, 241, 0.1)',\n                borderColor: \"#6366f1\",\n                tension: 0.3,\n              }]\n            },\n            weight: {\n              labels: weightData?.labels || [],\n              datasets: [{\n                label: \"Weight\",\n                data: weightData?.values || [],\n                fill: true,\n                backgroundColor: 'rgba(34, 197, 94, 0.1)',\n                borderColor: \"#22c55e\",\n                tension: 0.3,\n              }]\n            },\n            calories: {\n              labels: caloriesData?.labels || [],\n              datasets: [{\n                label: \"Calories\",\n                data: caloriesData?.values || [],\n                fill: true,\n                backgroundColor: 'rgba(249, 115, 22, 0.1)',\n                borderColor: \"#f97316\",\n                tension: 0.3,\n              }]\n            },\n            activeMinutes: {\n              labels: activityData?.labels || [],\n              datasets: [{\n                label: \"Active Minutes\",\n                data: activityData?.values || [],\n                fill: true,\n                backgroundColor: 'rgba(168, 85, 247, 0.1)',\n                borderColor: \"#a855f7\",\n                tension: 0.3,\n              }]\n            }\n          };\n          \n          setMetrics(newMetrics);\n        } catch (err) {\n          console.error(\"Failed to fetch metrics data:\", err)\n          setError(\"Failed to load metrics data. Please try again later.\")\n        } finally {\n          setIsLoading(false)\n        }\n      }\n      fetchMetricsData()\n    } catch (error) {\n      console.error(\"Error adding metric:\", error)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n  console.log(\"metrics:\", metrics)\n\n  if (isLoading) {\n    return (\n      <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900\">\n        <Sidebar />\n        <main className={`flex-1 transition-all duration-300 ${isSidebarOpen ? \"ml-64\" : \"ml-20\"} p-6 overflow-auto`}>\n          <div className=\"flex justify-center items-center h-full\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-600\"></div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900\">\n        <Sidebar />\n        <main className={`flex-1 transition-all duration-300 ${isSidebarOpen ? \"ml-64\" : \"ml-20\"} p-6 overflow-auto`}>\n          <div className=\"text-center text-red-600 dark:text-red-400 p-4\">\n            {error}\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  if (!metrics) {\n    return (\n      <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900\">\n        <Sidebar />\n        <main className={`flex-1 transition-all duration-300 ${isSidebarOpen ? \"ml-64\" : \"ml-20\"} p-6 overflow-auto`}>\n          <div className=\"text-center text-gray-600 dark:text-gray-400 p-4\">\n            No metrics available. Please add some data to see your metrics.\n          </div>\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900\">\n      {/* Sidebar Component */}\n      <Sidebar />\n\n      {/* Main Content Area */}\n      <main className={`flex-1 transition-all duration-300 ${isSidebarOpen ? \"ml-64\" : \"ml-24\"} p-6 overflow-auto`}>\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Page Header with Doctor's Report Button */}\n          <div className=\"flex justify-between items-center mb-6\">\n            <h1 className=\"text-3xl font-semibold text-gray-800 dark:text-white\">Health Metrics</h1>\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={() => setShowDoctorReport(true)}\n                className=\"flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\"\n              >\n                <FaMoon className=\"mr-2\" />\n                Doctor's Report\n              </button>\n              <button \n                onClick={handleToggleTheme} \n                className=\"p-2 bg-blue-600 hover:bg-blue-700 text-white rounded-full transition-colors\"\n                aria-label={darkMode ? \"Switch to light mode\" : \"Switch to dark mode\"}\n              >\n                {darkMode ? <FaSun className=\"h-5 w-5\" /> : <FaMoon className=\"h-5 w-5\" />}\n              </button>\n            </div>\n          </div>\n\n          {/* AI Correlation Section */}\n          <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/30 dark:to-indigo-900/30 p-6 rounded-lg shadow-md border border-blue-100 dark:border-blue-800 mb-6\">\n            <div className=\"flex items-center mb-4\">\n              <FaBrain className=\"text-blue-500 mr-2\" />\n              <h2 className=\"text-xl font-semibold text-gray-800 dark:text-white\">AI Correlation Insights</h2>\n            </div>\n            <div className=\"space-y-3\">\n                {correlationInsights.map((insight, index) => (\n                <div key={index} className=\"flex items-start space-x-3\">\n                  <div className=\"flex-shrink-0 w-2 h-2 rounded-full bg-blue-500 mt-2\"></div>\n                  <p className=\"text-gray-700 dark:text-gray-300\">{insight}</p>\n                </div>\n              ))}\n            </div>\n            <div className=\"mt-4 flex items-center justify-between\">\n              <div className=\"text-xs text-blue-600 dark:text-blue-400 italic\">\n                AI-generated insights based on your health data patterns\n              </div>\n              <AIStatus isOnline={isAiOnline} />\n            </div>\n          </div>\n\n          {/* Time Range Selector */}\n          <div className=\"mb-6\">\n            <div className=\"inline-flex rounded-lg border border-gray-200 dark:border-gray-700\">\n              <button\n                onClick={() => setTimeRange(\"week\")}\n                className={`px-4 py-2 rounded-l-lg ${\n                  timeRange === \"week\"\n                    ? \"bg-blue-600 text-white\"\n                    : \"bg-white dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\n                }`}\n              >\n                Week\n              </button>\n              <button\n                onClick={() => setTimeRange(\"month\")}\n                className={`px-4 py-2 border-l border-gray-200 dark:border-gray-700 ${\n                  timeRange === \"month\"\n                    ? \"bg-blue-600 text-white\"\n                    : \"bg-white dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\n                }`}\n              >\n                Month\n              </button>\n              <button\n                onClick={() => setTimeRange(\"year\")}\n                className={`px-4 py-2 rounded-r-lg border-l border-gray-200 dark:border-gray-700 ${\n                  timeRange === \"year\"\n                    ? \"bg-blue-600 text-white\"\n                    : \"bg-white dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\n                }`}\n              >\n                Year\n              </button>\n            </div>\n          </div>\n\n          {/* Metrics Grid */}\n          {isLoading ? (\n            <div className=\"flex justify-center items-center h-64\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-600\"></div>\n            </div>\n          ) : error ? (\n            <div className=\"text-center text-red-600 dark:text-red-400 p-4\">\n              {error}\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {metrics && Object.entries(metrics).map(([key, value]) => (\n                <Card key={key} className=\"p-4\">\n                  <h2 className=\"text-xl font-semibold mb-2\">{key}</h2>\n                  <LineChart data={value} />\n                </Card>\n              ))}\n            </div>\n          )}\n\n          {/* AI Health Tips Section */}\n          <div className=\"mt-12 mb-12 bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-900/30 dark:to-emerald-900/30 p-6 rounded-lg shadow-md border border-green-100 dark:border-green-800\">\n            <div className=\"flex items-center mb-4\">\n              <FaBrain className=\"text-green-500 mr-2\" />\n              <h2 className=\"text-xl font-semibold text-gray-800 dark:text-white\">AI Health Tips</h2>\n            </div>\n            <div className=\"space-y-4\">\n              {aiTips.map((tip, index) => (\n                <div key={index} className=\"flex items-start space-x-3\">\n                  <div className=\"flex-shrink-0 w-2 h-2 rounded-full bg-green-500 mt-2\"></div>\n                  <div>\n                    <p className=\"text-gray-700 dark:text-gray-300\">{tip}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"mt-4 flex items-center justify-between\">\n              <div className=\"text-xs text-green-600 dark:text-green-400 italic\">\n                Personalized tips based on your health metrics and patterns\n              </div>\n              <AIStatus isOnline={isAiOnline} />\n            </div>\n            </div>\n\n            {/* Medical Resources Section */}\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700 mb-8\">\n            <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-white\">Medical Resources</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <a\n                href=\"https://www.heart.org/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"flex items-center p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors\"\n              >\n                <FaMoon className=\"mr-2 text-blue-500\" />\n                <span className=\"text-gray-700 dark:text-gray-300\">American Heart Association</span>\n              </a>\n              <a\n                href=\"https://www.sleepfoundation.org/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"flex items-center p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors\"\n              >\n                <FaSun className=\"mr-2 text-blue-500\" />\n                <span className=\"text-gray-700 dark:text-gray-300\">Sleep Foundation</span>\n              </a>\n              <a\n                href=\"https://www.cdc.gov/physicalactivity/\"\n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                className=\"flex items-center p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors\"\n              >\n                <FaBrain className=\"mr-2 text-blue-500\" />\n                <span className=\"text-gray-700 dark:text-gray-300\">CDC Physical Activity</span>\n              </a>\n            </div>\n          </div>\n\n          {/* Footer with AI Disclaimer */}\n          <footer className=\"mt-12 mb-8 text-center\">\n            <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                <FaInfoCircle className=\"inline-block mr-1\" />\n                AI-powered insights are provided for informational purposes only and should not replace professional medical advice.\n            </p>\n          </div>\n          </footer>\n        </div>\n      </main>\n\n      {/* Floating Action Button */}\n      <div className=\"fixed bottom-8 right-8 z-50\">\n        <div className=\"relative\">\n          {/* Add Metric Button */}\n          <button\n            onClick={() => setIsAddMenuOpen(!isAddMenuOpen)}\n            className=\"w-14 h-14 bg-blue-600 hover:bg-blue-700 text-white rounded-full shadow-lg flex items-center justify-center transition-all duration-300 transform hover:scale-110\"\n            aria-label=\"Add health metric\"\n          >\n            <FaPlus className=\"text-xl\" />\n          </button>\n\n          {/* Dropdown Menu */}\n          {isAddMenuOpen && (\n            <div className=\"absolute bottom-16 right-0 w-48 bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 overflow-hidden\">\n              <button\n                onClick={() => handleAddMetric(\"steps\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaWalking className=\"mr-2\" /> Steps\n              </button>\n              <button\n                onClick={() => handleAddMetric(\"sleep\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaBed className=\"mr-2\" /> Sleep\n              </button>\n              <button\n                onClick={() => handleAddMetric(\"heartRate\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaHeartbeat className=\"mr-2\" /> Heart Rate\n              </button>\n              <button\n                onClick={() => handleAddMetric(\"weight\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaWeight className=\"mr-2\" /> Weight\n              </button>\n              <button\n                onClick={() => handleAddMetric(\"calories\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaAppleAlt className=\"mr-2\" /> Calories\n              </button>\n              <button\n                onClick={() => handleAddMetric(\"activeMinutes\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaRunning className=\"mr-2\" /> Active Minutes\n              </button>\n            </div>\n          )}\n\n          {/* Metric Input Modal */}\n          {selectedMetric && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-xl w-96\">\n                <h3 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">\n                  Add {selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)}\n                </h3>\n                <input\n                  type=\"number\"\n                  value={metricValue}\n                  onChange={(e) => setMetricValue(e.target.value)}\n                  placeholder={`Enter ${selectedMetric} value`}\n                  className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                />\n                <div className=\"mt-4 flex justify-end space-x-2\">\n                  <button\n                    onClick={() => {\n                      setSelectedMetric(null)\n                      setMetricValue(\"\")\n                    }}\n                    className=\"px-4 py-2 text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-md\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleSubmitMetric}\n                    disabled={isSubmitting || !metricValue}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {isSubmitting ? \"Adding...\" : \"Add\"}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Doctor's Report Modal */}\n      {showDoctorReport && (\n        <DoctorReport onClose={() => setShowDoctorReport(false)} />\n      )}\n    </div>\n  )\n}\n\nexport default Metrics\n\n"],"names":["DoctorReport","onClose","email","setEmail","useState","selectedMetrics","setSelectedMetrics","isLoading","setIsLoading","isSuccess","setIsSuccess","error","setError","customNotes","setCustomNotes","handleMetricToggle","metric","m","handleGenerateReport","healthAPI","handleSubmit","e","err","jsx","jsxs","FaCheckCircle","FaClipboard","FaInfoCircle","FaEnvelope","FaEdit","Fragment","Card","React.forwardRef","className","props","ref","cn","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","LineChart","data","options","defaultOptions","Line","Metrics","isSidebarOpen","useSidebar","showDoctorReport","setShowDoctorReport","darkMode","setDarkMode","timeRange","setTimeRange","isAiOnline","metrics","setMetrics","aiTips","setAiTips","correlationInsights","setCorrelationInsights","isAddMenuOpen","setIsAddMenuOpen","selectedMetric","setSelectedMetric","metricValue","setMetricValue","isSubmitting","setIsSubmitting","useEffect","initialDarkMode","getInitialTheme","handleToggleTheme","newDarkMode","toggleTheme","stepsData","heartRateData","sleepData","weightData","caloriesData","activityData","newMetrics","tips","_b","_a","_c","handleAddMetric","handleSubmitMetric","Sidebar","FaMoon","FaSun","FaBrain","insight","index","AIStatus","key","value","tip","FaPlus","FaWalking","FaBed","FaHeartbeat","FaWeight","FaAppleAlt","FaRunning"],"mappings":"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"}