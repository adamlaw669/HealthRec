{"version":3,"file":"SettingsPage-DAhxi04n.js","sources":["../../app/features/settings/SettingsPage.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport Sidebar from \"../../components/Sidebar\"\nimport { useSidebar } from \"../../context/SidebarContext\"\nimport { FaMoon, FaSun, FaGoogle, FaPen } from \"react-icons/fa\"\nimport { getInitialTheme, toggleTheme } from \"../../utils/theme-utils\"\n\n// Mock API functions\nconst mockAPI = {\n  getProfile: async () => ({\n    email: \"user@example.com\",\n    name: \"John Doe\"\n  }),\n  checkGoogleFitStatus: async () => true,\n  getSettings: async () => ({\n    language: \"en\",\n    darkMode: false,\n    useMetricSystem: true,\n    emailNotifications: true,\n    healthAlerts: true,\n    isActive: true,\n    accountDeletionScheduled: null,\n    googleFitConnected: false\n  }),\n  updateSettings: async (settings: any) => {\n    console.log(\"Settings updated:\", settings)\n    return { success: true }\n  },\n  scheduleAccountDeletion: async (days: number) => {\n    console.log(`Account deletion scheduled in ${days} days`)\n    return { success: true }\n  },\n  cancelAccountDeletion: async () => {\n    console.log(\"Account deletion cancelled\")\n    return { success: true }\n  },\n  connectGoogleFit: async () => {\n    console.log(\"Google Fit connection initiated\")\n    return { success: true }\n  },\n  getFAQs: async () => ({\n    faqs: [\n      {\n        question: \"How is my health data secured?\",\n        answer: \"Your health data is encrypted both in transit and at rest.\"\n      },\n      {\n        question: \"Can I export my health data?\",\n        answer: \"Yes, you can download your health data in various formats (JSON, CSV, PDF) from your Profile page.\",\n      },\n      {\n        question: \"How accurate are the AI recommendations?\",\n        answer: \"Our AI recommendations are based on patterns in your health data and general health guidelines. They should not replace professional medical advice.\",\n      },\n      {\n        question: \"How do I connect my Google Fit account?\",\n        answer: \"Go to the Connections tab in Settings and click on 'Connect' next to Google Fit. Follow the authentication steps to grant access.\",\n      },\n      {\n        question: \"Can I delete my account and all my data?\",\n        answer: \"Yes, you can request account deletion from the Privacy tab in Settings. This will permanently remove all your data from our systems.\",\n      }\n    ]\n  })\n}\n\nexport default function SettingsPage() {\n  const { isSidebarOpen } = useSidebar()\n  const navigate = useNavigate()\n  const [language, setLanguage] = useState(\"English\")\n  const [darkMode, setDarkMode] = useState(false)\n  const [activeTab, setActiveTab] = useState(\"preferences\")\n  const [settings, setSettings] = useState({\n    language: \"en\",\n    darkMode: false,\n    useMetricSystem: true,\n    emailNotifications: true,\n    healthAlerts: true,\n    isActive: true,\n    accountDeletionScheduled: null as Date | null,\n    googleFitConnected: false,\n  })\n  const [_, setContactForm] = useState({\n    subject: \"\",\n    message: \"\",\n    email: \"\",\n  })\n  const [_1, setFaqs] = useState([\n    {\n      question: \"How is my health data secured?\",\n      answer: \"Your health data is encrypted both in transit and at rest.\"\n    }\n  ])\n  const [isSaving, setIsSaving] = useState(false)\n  const [accountDeletionDays, setAccountDeletionDays] = useState(30)\n  const [isDeletingAccount, setIsDeletingAccount] = useState(false)\n  const [deletionError, setDeletionError] = useState<string | null>(null)\n  const [deletionSuccess, setDeletionSuccess] = useState(false)\n\n  useEffect(() => {\n    const initialDarkMode = getInitialTheme()\n    setDarkMode(initialDarkMode)\n\n    const fetchData = async () => {\n      try {\n        const profile = await mockAPI.getProfile()\n        setContactForm(prev => ({ ...prev, email: profile.email }))\n        \n        const googleFitStatus = await mockAPI.checkGoogleFitStatus()\n        setSettings(prev => ({ ...prev, googleFitConnected: googleFitStatus }))\n        \n        const settingsData = await mockAPI.getSettings()\n        setSettings(prev => ({ ...prev, ...settingsData }))\n        \n        const faqsData = await mockAPI.getFAQs()\n        setFaqs(faqsData.faqs)\n      } catch (error) {\n        console.error(\"Error fetching data:\", error)\n      }\n    }\n\n    fetchData()\n  }, [])\n\n  const handleToggleTheme = () => {\n    const newDarkMode = toggleTheme(darkMode)\n    setDarkMode(newDarkMode)\n    setSettings(prev => ({ ...prev, darkMode: newDarkMode }))\n  }\n\n  const handleLanguageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleNotificationChange = (setting: string) => {\n    setSettings(prev => ({\n      ...prev,\n      [setting]: !prev[setting as keyof typeof prev],\n    }))\n  }\n\n  const handleSaveSettings = async () => {\n    setIsSaving(true)\n    try {\n      await mockAPI.updateSettings(settings)\n      // No need for error handling since mock always succeeds\n    } finally {\n      setIsSaving(false)\n    }\n  }\n\n  const handleScheduleDeletion = async () => {\n    setIsDeletingAccount(true)\n    setDeletionError(null)\n    setDeletionSuccess(false)\n\n    try {\n      await mockAPI.scheduleAccountDeletion(accountDeletionDays)\n      setSettings(prev => ({\n        ...prev,\n        accountDeletionScheduled: new Date(Date.now() + accountDeletionDays * 24 * 60 * 60 * 1000)\n      }))\n      setDeletionSuccess(true)\n    } catch (error) {\n      setDeletionError(\"Failed to schedule deletion\")\n    } finally {\n      setIsDeletingAccount(false)\n    }\n  }\n\n  const handleCancelDeletion = async () => {\n    setIsDeletingAccount(true)\n    setDeletionError(null)\n    setDeletionSuccess(false)\n\n    try {\n      await mockAPI.cancelAccountDeletion()\n      setSettings(prev => ({ ...prev, accountDeletionScheduled: null }))\n      setDeletionSuccess(true)\n    } catch (error) {\n      setDeletionError(\"Failed to cancel deletion\")\n    } finally {\n      setIsDeletingAccount(false)\n    }\n  }\n\n  const handleGoogleFitConnection = async () => {\n    try {\n      if (settings.googleFitConnected) {\n        setSettings(prev => ({ ...prev, googleFitConnected: false }))\n      } else {\n        await mockAPI.connectGoogleFit()\n        setSettings(prev => ({ ...prev, googleFitConnected: true }))\n      }\n    } catch (error) {\n      console.error(\"Error managing Google Fit connection:\", error)\n    }\n  }\n\n  return (\n    <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900\">\n      <Sidebar />\n      <main className={`flex-1 transition-all duration-300 ${isSidebarOpen ? \"ml-64\" : \"ml-20\"} p-6 overflow-auto`}>\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h1 className=\"text-3xl font-semibold text-gray-800 dark:text-white\">Settings</h1>\n            <button\n              onClick={handleToggleTheme}\n              className=\"p-2 bg-blue-600 hover:bg-blue-700 text-white rounded-full transition-colors\"\n              aria-label={darkMode ? \"Switch to light mode\" : \"Switch to dark mode\"}\n            >\n              {darkMode ? <FaSun className=\"h-5 w-5\" /> : <FaMoon className=\"h-5 w-5\" />}\n            </button>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden border border-gray-200 dark:border-gray-700\">\n            <div className=\"flex border-b border-gray-200 dark:border-gray-700\">\n              <button\n                className={`px-6 py-3 text-sm font-medium ${\n                  activeTab === \"preferences\"\n                    ? \"text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400\"\n                    : \"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\"\n                }`}\n                onClick={() => setActiveTab(\"preferences\")}\n              >\n                Preferences\n              </button>\n              <button\n                className={`px-6 py-3 text-sm font-medium ${\n                  activeTab === \"notifications\"\n                    ? \"text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400\"\n                    : \"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\"\n                }`}\n                onClick={() => setActiveTab(\"notifications\")}\n              >\n                Notifications\n              </button>\n              <button\n                className={`px-6 py-3 text-sm font-medium ${\n                  activeTab === \"integrations\"\n                    ? \"text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400\"\n                    : \"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\"\n                }`}\n                onClick={() => setActiveTab(\"integrations\")}\n              >\n                Integrations\n              </button>\n              <button\n                className={`px-6 py-3 text-sm font-medium ${\n                  activeTab === \"account\"\n                    ? \"text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400\"\n                    : \"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\"\n                }`}\n                onClick={() => setActiveTab(\"account\")}\n              >\n                Account\n              </button>\n            </div>\n\n            <div className=\"p-6\">\n              {/* Preferences Tab */}\n              {activeTab === \"preferences\" && (\n                <div>\n                  <h2 className=\"text-xl font-medium mb-4 text-gray-800 dark:text-white\">Preferences</h2>\n                  <div className=\"space-y-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium mb-1 text-gray-700 dark:text-gray-300\">\n                        Language\n                      </label>\n                      <select\n                        value={language}\n                        onChange={handleLanguageChange}\n                        className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option>English</option>\n                        <option>Spanish</option>\n                        <option>French</option>\n                      </select>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium mb-1 text-gray-700 dark:text-gray-300\">Units</label>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center\">\n                          <input\n                            type=\"radio\"\n                            className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\"\n                            checked={settings.useMetricSystem}\n                            onChange={() => setSettings({ ...settings, useMetricSystem: true })}\n                          />\n                          <label className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n                            Metric (kg, cm)\n                          </label>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <input\n                            type=\"radio\"\n                            className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300\"\n                            checked={!settings.useMetricSystem}\n                            onChange={() => setSettings({ ...settings, useMetricSystem: false })}\n                          />\n                          <label className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\n                            Imperial (lb, ft)\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n\n                    <button \n                      className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition\"\n                      onClick={handleSaveSettings}\n                      disabled={isSaving}\n                    >\n                      {isSaving ? \"Saving...\" : \"Save Preferences\"}\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {/* Notifications Tab */}\n              {activeTab === \"notifications\" && (\n                <div>\n                  <h2 className=\"text-xl font-medium mb-4 text-gray-800 dark:text-white\">Notification Settings</h2>\n                  <div className=\"space-y-6\">\n                    <div className=\"space-y-4\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                          <p className=\"text-gray-700 dark:text-gray-300\">Email Notifications</p>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            Receive notifications via email\n                            </p>\n                          </div>\n                          <div className=\"relative inline-block w-12 h-6 transition duration-200 ease-in-out rounded-full cursor-pointer\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"absolute w-0 h-0 opacity-0\"\n                            checked={settings.emailNotifications}\n                            onChange={() => handleNotificationChange(\"emailNotifications\")}\n                            />\n                            <label\n                              className={`block h-6 overflow-hidden rounded-full cursor-pointer ${\n                              settings.emailNotifications ? \"bg-blue-600\" : \"bg-gray-300 dark:bg-gray-600\"\n                              }`}\n                            >\n                              <span\n                                className={`block h-6 w-6 rounded-full bg-white transform transition-transform duration-200 ease-in-out ${\n                                settings.emailNotifications ? \"translate-x-6\" : \"translate-x-0\"\n                                }`}\n                              ></span>\n                            </label>\n                          </div>\n                        </div>\n\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-gray-700 dark:text-gray-300\">Health Alerts</p>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                              Get notified about unusual changes in your health metrics\n                            </p>\n                          </div>\n                          <div className=\"relative inline-block w-12 h-6 transition duration-200 ease-in-out rounded-full cursor-pointer\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"absolute w-0 h-0 opacity-0\"\n                            checked={settings.healthAlerts}\n                              onChange={() => handleNotificationChange(\"healthAlerts\")}\n                            />\n                            <label\n                              className={`block h-6 overflow-hidden rounded-full cursor-pointer ${\n                              settings.healthAlerts ? \"bg-blue-600\" : \"bg-gray-300 dark:bg-gray-600\"\n                              }`}\n                            >\n                              <span\n                                className={`block h-6 w-6 rounded-full bg-white transform transition-transform duration-200 ease-in-out ${\n                                settings.healthAlerts ? \"translate-x-6\" : \"translate-x-0\"\n                                }`}\n                              ></span>\n                            </label>\n                        </div>\n                      </div>\n                    </div>\n\n                    <button \n                      className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition\"\n                      onClick={handleSaveSettings}\n                      disabled={isSaving}\n                    >\n                      {isSaving ? \"Saving...\" : \"Save Notification Settings\"}\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {/* Integrations Tab */}\n              {activeTab === \"integrations\" && (\n                <div>\n                  <h2 className=\"text-xl font-medium mb-4 text-gray-800 dark:text-white\">Data Sources</h2>\n                  <div className=\"space-y-6\">\n                    {/* Google Fit Integration */}\n                    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-200 dark:border-gray-700\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-4\">\n                          <div className=\"w-12 h-12 flex items-center justify-center bg-blue-100 dark:bg-blue-900 rounded-full\">\n                            <FaGoogle className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n                          </div>\n                          <div>\n                            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">Google Fit</h3>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                              {settings.googleFitConnected\n                                ? \"Connected - Automatically sync your health data\"\n                                : \"Connect to automatically sync your health data\"}\n                            </p>\n                          </div>\n                        </div>\n                        <button\n                          onClick={handleGoogleFitConnection}\n                          className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                            settings.googleFitConnected\n                              ? \"bg-red-100 text-red-700 hover:bg-red-200 dark:bg-red-900/30 dark:text-red-400 dark:hover:bg-red-900/50\"\n                              : \"bg-blue-100 text-blue-700 hover:bg-blue-200 dark:bg-blue-900/30 dark:text-blue-400 dark:hover:bg-blue-900/50\"\n                          }`}\n                        >\n                          {settings.googleFitConnected ? \"Disconnect\" : \"Connect\"}\n                        </button>\n                      </div>\n                      {settings.googleFitConnected && (\n                        <div className=\"mt-4 space-y-2\">\n                          <div className=\"flex items-center justify-between text-sm\">\n                            <span className=\"text-gray-600 dark:text-gray-400\">Last synced</span>\n                            <span className=\"text-gray-900 dark:text-white\">2 minutes ago</span>\n                          </div>\n                          <div className=\"flex items-center justify-between text-sm\">\n                            <span className=\"text-gray-600 dark:text-gray-400\">Sync frequency</span>\n                            <span className=\"text-gray-900 dark:text-white\">Every 30 minutes</span>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n\n                    {/* Manual Data Entry Section */}\n                    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-200 dark:border-gray-700\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-4\">\n                          <div className=\"w-12 h-12 flex items-center justify-center bg-green-100 dark:bg-green-900 rounded-full\">\n                            <FaPen className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\n                          </div>\n                          <div>\n                            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">Manual Entry</h3>\n                            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                              Add and manage your health data manually\n                            </p>\n                          </div>\n                        </div>\n                        <button\n                          onClick={() => navigate(\"/metrics\")}\n                          className=\"px-4 py-2 bg-green-100 text-green-700 hover:bg-green-200 dark:bg-green-900/30 dark:text-green-400 dark:hover:bg-green-900/50 rounded-md text-sm font-medium transition-colors\"\n                        >\n                          Add Data\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Account Tab */}\n              {activeTab === \"account\" && (\n                <div>\n                  <h2 className=\"text-xl font-medium mb-4 text-gray-800 dark:text-white\">Account Settings</h2>\n                  <div className=\"space-y-6\">\n                    <div>\n                      <h3 className=\"text-lg font-medium mb-2 text-gray-700 dark:text-gray-300\">Account Deletion</h3>\n                      {settings.accountDeletionScheduled ? (\n                      <div className=\"space-y-4\">\n                          <div className=\"bg-yellow-50 dark:bg-yellow-900/30 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4\">\n                            <p className=\"text-yellow-700 dark:text-yellow-300\">\n                              Your account is scheduled for deletion on {settings.accountDeletionScheduled.toLocaleDateString()}.\n                            </p>\n                          </div>\n                          <button\n                            onClick={handleCancelDeletion}\n                            disabled={isDeletingAccount}\n                            className=\"px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition\"\n                          >\n                            {isDeletingAccount ? \"Cancelling...\" : \"Cancel Account Deletion\"}\n                          </button>\n                        </div>\n                      ) : (\n                        <div className=\"space-y-4\">\n                            <div className=\"bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n                            <p className=\"text-red-700 dark:text-red-300\">\n                              Warning: This action cannot be undone. All your data will be permanently deleted.\n                            </p>\n                          </div>\n                          <div>\n                            <label className=\"block text-sm font-medium mb-1 text-gray-700 dark:text-gray-300\">\n                              Deletion Delay (days)\n                            </label>\n                            <input\n                              type=\"number\"\n                              min=\"1\"\n                              max=\"90\"\n                              value={accountDeletionDays}\n                              onChange={(e) => setAccountDeletionDays(Number(e.target.value))}\n                              className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:ring-blue-500 focus:border-blue-500\"\n                            />\n                          </div>\n                          <button\n                            onClick={handleScheduleDeletion}\n                            disabled={isDeletingAccount}\n                            className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition\"\n                          >\n                            {isDeletingAccount ? \"Scheduling...\" : \"Schedule Account Deletion\"}\n                          </button>\n                        </div>\n                      )}\n                      {deletionError && (\n                        <div className=\"mt-4 bg-red-50 dark:bg-red-900/30 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n                          <p className=\"text-red-700 dark:text-red-300\">{deletionError}</p>\n                        </div>\n                      )}\n                      {deletionSuccess && (\n                        <div className=\"mt-4 bg-green-50 dark:bg-green-900/30 border border-green-200 dark:border-green-800 rounded-lg p-4\">\n                          <p className=\"text-green-700 dark:text-green-300\">\n                            {settings.accountDeletionScheduled ? \"Account deletion cancelled successfully!\" : \"Account deletion scheduled successfully!\"}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  )\n}"],"names":["mockAPI","settings","days","SettingsPage","isSidebarOpen","useSidebar","navigate","useNavigate","language","setLanguage","useState","darkMode","setDarkMode","activeTab","setActiveTab","setSettings","_","setContactForm","_1","setFaqs","isSaving","setIsSaving","accountDeletionDays","setAccountDeletionDays","isDeletingAccount","setIsDeletingAccount","deletionError","setDeletionError","deletionSuccess","setDeletionSuccess","useEffect","initialDarkMode","getInitialTheme","profile","prev","googleFitStatus","settingsData","faqsData","error","handleToggleTheme","newDarkMode","toggleTheme","handleLanguageChange","e","handleNotificationChange","setting","handleSaveSettings","handleScheduleDeletion","handleCancelDeletion","handleGoogleFitConnection","jsxs","jsx","Sidebar","FaSun","FaMoon","FaGoogle","FaPen"],"mappings":"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"}