{"version":3,"file":"Dashboard-Ca5-Hea_.js","sources":["../../node_modules/chart.js/auto/auto.js","../../node_modules/@radix-ui/react-compose-refs/dist/index.mjs","../../node_modules/@radix-ui/react-slot/dist/index.mjs","../../node_modules/class-variance-authority/dist/index.mjs","../../components/ui/button.tsx","../../components/ui/input.tsx","../../components/ui/HealthInterpreter.tsx","../../app/features/dashboard/Dashboard.tsx"],"sourcesContent":["import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","// packages/react/compose-refs/src/composeRefs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/slot/src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\nvar Slot = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    const props2 = mergeProps(slotProps, children.props);\n    if (children.type !== React.Fragment) {\n      props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n    }\n    return React.cloneElement(children, props2);\n  }\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ jsx(Fragment2, { children });\n};\nfunction isSlottable(child) {\n  return React.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\nexport {\n  Root,\n  Slot,\n  Slottable\n};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","'use client';\n\nimport React, { useState } from 'react';\nimport { Button } from './button';\nimport { Input } from './input';\n//import { Card } from './card';\nimport { FaChevronDown, FaChevronUp, FaTimes, FaHistory } from 'react-icons/fa';\nimport { healthAPI } from \"../../app/api/api\";\n\ninterface HealthResponse {\n  title: string;\n  content: string;\n}\n\ninterface ParsedResponse {\n  measurements: HealthResponse;\n  normalRanges: HealthResponse;\n  implications: HealthResponse;\n  recommendations: HealthResponse;\n  medicalAdvice: HealthResponse;\n}\n\nexport function HealthInterpreter() {\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState<ParsedResponse | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [expandedSection, setExpandedSection] = useState<string | null>(null);\n  const [history, setHistory] = useState<Array<{ question: string; response: ParsedResponse }>>([]);\n  const [metricSuggestions] = useState<Array<{ type: string, example: string }>>([\n    { type: 'Blood Pressure', example: 'My blood pressure is 120/80' },\n    { type: 'Blood Sugar', example: 'My blood sugar is 108 mg/dL' },\n    { type: 'Heart Rate', example: 'My heart rate is 72 bpm' },\n    { type: 'Respiratory Rate', example: 'My breathing rate is 16 breaths per minute' },\n    { type: 'Body Temperature', example: 'My temperature is 37.2°C' },\n    { type: 'Oxygen Saturation', example: 'My oxygen level is 98%' }\n  ]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  const parseResponse = (text: string): ParsedResponse => {\n    // First, clean up the text\n    const cleanText = text\n      .replace(/^Hey there!\\s*/, '')\n      .replace(/\\*\\*/g, '') // Remove emphasis markers\n      .trim();\n\n    // Split text into sections based on numbered points and cleanup\n    const sections = cleanText\n      .split(/(?=\\d+\\.)/) // Split on numbered sections\n      .filter(Boolean)\n      .map(section => section.trim());\n\n    // Initialize section contents with default values\n    let measurements = 'Analyzing your measurements...';\n    let normalRanges = 'Analyzing normal ranges...';\n    let implications = 'Analyzing health implications...';\n    let recommendations = 'Preparing recommendations...';\n    let medicalAdvice = 'This information is for educational purposes only and not a substitute for professional medical advice. Always consult with a healthcare provider for proper diagnosis and treatment.';\n\n    // Map sections based on their content\n    sections.forEach((section) => {\n      const sectionText = section.replace(/^\\d+\\.\\s+/, '').trim();\n\n      if (section.match(/^1\\./)) {\n        measurements = sectionText;\n      } else if (section.match(/^2\\./)) {\n        normalRanges = sectionText;\n      } else if (section.match(/^3\\./)) {\n        implications = sectionText;\n      } else if (section.match(/^4\\./)) {\n        recommendations = sectionText;\n      } else if (section.match(/^5\\./)) {\n        medicalAdvice = sectionText;\n      }\n    });\n\n    // Log sections for debugging\n    console.log('Parsed sections:', {\n      measurements,\n      normalRanges,\n      implications,\n      recommendations,\n      medicalAdvice\n    });\n\n    return {\n      measurements: {\n        title: \"Understanding Your Measurements\",\n        content: measurements\n      },\n      normalRanges: {\n        title: \"Normal Ranges\",\n        content: normalRanges\n      },\n      implications: {\n        title: \"What This Means\",\n        content: implications\n      },\n      recommendations: {\n        title: \"Recommendations\",\n        content: recommendations\n      },\n      medicalAdvice: {\n        title: \"Medical Advice\",\n        content: medicalAdvice\n      }\n    };\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!message.trim()) return;\n    setIsLoading(true);\n    try {\n      console.log('Sending request to health interpreter:', message);\n      // Use the healthAPI.explainHealthMetric function\n      const data = await healthAPI.explainHealthMetric(message);\n      console.log('Received response from health interpreter:', data);\n\n      if (data.error) {\n        throw new Error(data.error);\n      }\n\n      const parsedResponse = parseResponse(data.explanation);\n      console.log('Parsed response:', parsedResponse);\n      setResponse(parsedResponse);\n      setHistory((prev) => [...prev, { question: message, response: parsedResponse }]);\n      setShowModal(true);\n      localStorage.setItem(\n        \"healthHistory\",\n        JSON.stringify([...history, { question: message, response: parsedResponse }])\n      );\n    } catch (error) {\n      console.error(\"Error in handleSubmit:\", error);\n    }\n    setIsLoading(false);\n    setMessage(\"\");\n  };\n\n  const toggleSection = (section: string) => {\n    setExpandedSection(expandedSection === section ? null : section);\n  };\n\n  const handleSuggestionClick = (example: string) => {\n    setMessage(example);\n    //setShowSuggestions(false);\n    setShowSuggestions(showSuggestions === true ? false : true); \n    //setExpandedSection(expandedSection === section ? null : section);\n  };\n/*\n  const Section = ({ title, content }: HealthResponse) => (\n    <div className=\"border-b border-gray-200 dark:border-gray-700\">\n      <button\n        onClick={() => toggleSection(title)}\n        className=\"flex justify-between items-center w-full px-4 py-3 text-left\"\n      >\n        <span className=\"font-medium text-gray-900 dark:text-white\">{title}</span>\n        {expandedSection === title ? <FaChevronUp /> : <FaChevronDown />}\n      </button>\n      {expandedSection === title && (\n        <div className=\"px-4 py-3 text-gray-700 dark:text-gray-300 max-h-[300px] overflow-y-auto\">\n          {content}\n        </div>\n      )}\n    </div>\n  );\n*/\n  return (\n    <>\n      {/* Hidden trigger button for dashboard */}\n      <button\n        data-health-interpreter\n        onClick={() => setShowModal(true)}\n        className=\"hidden\"\n        aria-hidden=\"true\"\n      />\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[1000]\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg w-full max-w-2xl max-h-[80vh] flex flex-col\">\n            <div className=\"flex justify-between items-center p-4 border-b dark:border-gray-700\">\n              <h2 className=\"text-xl font-semibold\">Health Metrics Interpreter</h2>\n              <button\n                onClick={() => setShowModal(false)}\n                className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 p-2\"\n              >\n                <FaTimes className=\"w-5 h-5\" />\n              </button>\n            </div>\n            <div className=\"overflow-y-auto flex-1 scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-gray-100\">\n              <div className=\"p-4\">\n                <div className=\"mb-4\">\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n                    Enter your health measurements or click a suggestion below:\n                  </div>\n                  <div className=\"flex flex-wrap gap-2 mb-2\">\n                    {metricSuggestions.map((suggestion, index) => (\n                      <button\n                        key={index}\n                        onClick={() => handleSuggestionClick(suggestion.example)}\n                        className=\"text-xs bg-blue-50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 px-3 py-1 rounded-full hover:bg-blue-100 dark:hover:bg-blue-900/50 transition-colors\"\n                      >\n                        {suggestion.type}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n                <form onSubmit={handleSubmit} className=\"mb-4\">\n                  <div className=\"flex gap-2\">\n                    <Input\n                      value={message}\n                      onChange={(e) => setMessage(e.target.value)}\n                      placeholder=\"Enter your health metrics (e.g., 'My blood pressure is 120/80')\"\n                      className=\"flex-1\"\n                      disabled={isLoading}\n                    />\n                    <Button type=\"submit\" disabled={isLoading}>\n                      {isLoading ? 'Analyzing...' : 'Ask'}\n                    </Button>\n                  </div>\n                </form>\n                {response && (\n                  <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg\">\n                    {Object.values(response).map((section, index) => (\n                      <div key={index} className=\"border-b border-gray-200 dark:border-gray-700\">\n                        <button\n                          onClick={() => toggleSection(section.title)}\n                          className=\"flex justify-between items-center w-full px-4 py-3 text-left\"\n                        >\n                          <span className=\"font-medium text-gray-900 dark:text-white\">{section.title}</span>\n                          {expandedSection === section.title ? <FaChevronUp /> : <FaChevronDown />}\n                        </button>\n                        {expandedSection === section.title && (\n                          <div className=\"px-4 py-3 text-gray-700 dark:text-gray-300\">\n                            {section.content}\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                )}\n                {history.length > 0 && (\n                  <div className=\"mt-4\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <FaHistory />\n                      <h3 className=\"font-medium\">Previous Questions</h3>\n                    </div>\n                    <div className=\"space-y-2\">\n                      {history.slice(-3).map((item, index) => (\n                        <div\n                          key={index}\n                          className=\"text-sm text-gray-600 dark:text-gray-400 cursor-pointer hover:text-blue-600\"\n                          onClick={() => {\n                            setResponse(item.response);\n                            setExpandedSection('measurements');\n                          }}\n                        >\n                          {item.question}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}","\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Sidebar from \"../../components/Sidebar\"\nimport { Line, Doughnut, Bar } from \"react-chartjs-2\"\nimport { FaWalking, FaBed, FaHeartbeat, FaWeight, FaAppleAlt, FaRunning, FaMoon, FaSun, FaBrain, FaInfoCircle, FaPlus } from \"react-icons/fa\"\nimport { useSidebar } from \"../../context/SidebarContext\"\nimport \"chart.js/auto\"\nimport { healthAPI } from \"../../api/api\"\nimport { getInitialTheme, toggleTheme } from \"../../utils/theme-utils\"\nimport AIStatus from \"../../components/AIStatus\"\nimport { HealthInterpreter } from \"../../../components/ui/HealthInterpreter\"\n\nexport default function Dashboard() {\n  const { isSidebarOpen } = useSidebar()\n  const [darkMode, setDarkMode] = useState(false)\n  const [aiRecommendations, setAiRecommendations] = useState<{\n    summary: string;\n    insights: string[];\n  }>({\n    summary: \"Connect your health tracking devices to get personalized recommendations.\",\n    insights: [\n      \"We'll analyze your health data to provide tailored insights.\",\n      \"Track your daily activities to receive AI-powered health advice.\",\n      \"Your data helps us understand your habits and suggest improvements.\",\n      \"Enable Google Fit sync for real-time health monitoring.\",\n    ]\n  })\n  const [healthFacts, setHealthFacts] =useState<string[]>([\n    \"Walking boosts your immune function.\",\n    \"Sleep helps regulate hormones.\",\n    \"Staying active reduces stress.\",\n  ])\n  const [chartData, setChartData] =  useState({\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    datasets: [\n      {\n        label: \"Steps\",\n        data: [4000, 6000, 5000, 7000, 6500, 8000, 5346],\n        borderColor: \"#1e3a8a\",\n        backgroundColor: \"rgba(30, 58, 138, 0.2)\",\n        tension: 0.4,\n      },\n    ],\n  })\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [isAiOnline, setIsAiOnline] = useState(false)\n  const [metrics, setMetrics] = useState({\n    steps: { value: 5346, trend: \"stable\" },\n    sleep: { value: 7, trend: \"stable\" },\n    heartRate: { value: 67, trend: \"stable\" },\n    weight: { value: 57, trend: \"stable\" },\n    calories: { value: 83, trend: \"stable\" },\n    activeMinutes: { value: 53, trend: \"stable\" },\n  })\n  const [showAllFacts, setShowAllFacts] = useState(false)\n  const [weeklySummary, setWeeklySummary] = useState<{\n    summary: string[];\n    trends: {\n      steps: number;\n      sleep: number;\n      heart_rate: number;\n      weight: number;\n      calories: number;\n      active_minutes: number;\n    };\n    status: string;\n  } | null>(null)\n  const [isAddMenuOpen, setIsAddMenuOpen] = useState(false)\n  const [selectedMetric, setSelectedMetric] = useState<string | null>(null)\n  const [metricValue, setMetricValue] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  //const API_ENDPOINT = \"http://127.0.0.1:8000\"\n  \n  // Sleep breakdown data\n  const [sleepBreakdownData, setSleepBreakdownData] = useState({\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        backgroundColor: [\n          \"rgba(30, 58, 138, 0.6)\",\n          \"rgba(59, 130, 246, 0.6)\",\n          \"rgba(99, 102, 241, 0.6)\",\n          \"rgba(139, 92, 246, 0.6)\",\n        ],\n        borderColor: [\n          \"rgba(30, 58, 138, 1)\",\n          \"rgba(59, 130, 246, 1)\",\n          \"rgba(99, 102, 241, 1)\",\n          \"rgba(139, 92, 246, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  })\n  \n  // Weekly activity data\n  const [weeklyActivityData, setWeeklyActivityData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: \"Active Minutes\",\n        data: [],\n        backgroundColor: \"rgba(30, 58, 138, 0.6)\",\n      },\n    ],\n  })\n\n  // Initialize theme on component mount\n  useEffect(() => {\n    // Add safe user data retrieval\n    const userData = localStorage.getItem(\"user\");\n    let username = \"\";\n    \n    if (userData) {\n      try {\n        const parsedUser = JSON.parse(userData);\n        username = parsedUser?.username || \"Guest\";\n      } catch (error) {\n        console.error(\"Error parsing user data:\", error);\n        username = \"Guest\";\n      }\n    } else {\n      username = \"Guest\";\n    }\n    \n    console.log(\"Current username:\", username);\n\n    const initialDarkMode = getInitialTheme();\n    setDarkMode(initialDarkMode);\n\n    // Apply theme to document\n    if (initialDarkMode) {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n  }, [])\n\n  const handleToggleTheme = () => {\n    const newDarkMode = toggleTheme(darkMode)\n    setDarkMode(newDarkMode)\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        // Get username from localStorage\n        const userData = localStorage.getItem(\"user\");\n        if (!userData) {\n          console.error(\"No user data found in localStorage\");\n          return;\n        }\n\n        const { username } = JSON.parse(userData);\n        console.log(\"Fetching recommendations for username:\", username);\n\n        // Fetch AI recommendations\n        try {\n          const recommendations = await healthAPI.getHealthRecommendation();\n          if (recommendations?.recommendations?.general) {\n            setAiRecommendations(recommendations.recommendations.general);\n            setIsAiOnline(true);\n          }\n        } catch (err: any) {\n          console.error(\"Failed to fetch AI recommendations:\", err.message);\n          setAiRecommendations({\n            summary: \"Unable to fetch recommendations. Please check your connection.\",\n            insights: [\n              \"Make sure you have granted all necessary permissions.\",\n              \"Try refreshing the page.\",\n              \"Check your internet connection and try again.\",\n              \"Contact support if the issue persists.\",\n            ]\n          });\n          setIsAiOnline(false);\n        }\n\n        // Fetch health facts\n        try {\n          const factsData = await healthAPI.getHealthFacts();\n            if (factsData && factsData.facts) {\n              setHealthFacts(factsData.facts);\n          } else {\n            setHealthFacts([]);\n          }\n        } catch (error) {\n          console.error(\"Error fetching health facts:\", error);\n          setHealthFacts([]);\n        }\n\n        // Fetch metrics data\n        try {\n          const metricsData = await healthAPI.getMetrics();\n          setMetrics({\n            steps: { value: metricsData.steps || 0, trend: \"stable\" },\n            sleep: { value: metricsData.sleep || 0, trend: \"stable\" },\n            heartRate: { value: metricsData.heart_rate || 0, trend: \"stable\" },\n            weight: { value: metricsData.weight || 0, trend: \"stable\" },\n            calories: { value: metricsData.calories || 0, trend: \"stable\" },\n            activeMinutes: { value: metricsData.activity_minutes || 0, trend: \"stable\" },\n          });\n        } catch (error) {\n          console.error(\"Error fetching metrics data:\", error);\n        }\n\n        // Fetch chart data for steps\n        try {\n          const stepsData = await healthAPI.getMetricsChart('steps');\n            if (stepsData && stepsData.labels && stepsData.values) {\n              setChartData({\n                labels: stepsData.labels,\n                datasets: [\n                  {\n                    label: \"Steps\",\n                    data: stepsData.values,\n                    borderColor: \"#1e3a8a\",\n                    backgroundColor: \"rgba(30, 58, 138, 0.2)\",\n                    tension: 0.4,\n                  },\n                ],\n              });\n          }\n        } catch (error) {\n          console.error(\"Error fetching steps data:\", error);\n        }\n\n        // Fetch weekly activity data\n        try {\n          const activityData = await healthAPI.getActivityData();\n            if (activityData && activityData.labels && activityData.values) {\n              setWeeklyActivityData({\n                labels: activityData.labels,\n                datasets: [\n                  {\n                    label: \"Active Minutes\",\n                    data: activityData.values,\n                    backgroundColor: \"rgba(30, 58, 138, 0.6)\",\n                  },\n                ],\n              });\n          }\n        } catch (error) {\n          console.error(\"Error fetching activity data:\", error);\n        }\n\n        // Fetch sleep breakdown data\n        try {\n          const sleepData = await healthAPI.getSleepData();\n          if (sleepData && sleepData.labels && sleepData.values) {\n              setSleepBreakdownData({\n              labels: sleepData.labels,\n                datasets: [\n                  {\n                  data: sleepData.values,\n                    backgroundColor: [\n                      \"rgba(30, 58, 138, 0.6)\",\n                      \"rgba(59, 130, 246, 0.6)\",\n                      \"rgba(99, 102, 241, 0.6)\",\n                      \"rgba(139, 92, 246, 0.6)\",\n                    ],\n                    borderColor: [\n                      \"rgba(30, 58, 138, 1)\",\n                      \"rgba(59, 130, 246, 1)\",\n                      \"rgba(99, 102, 241, 1)\",\n                      \"rgba(139, 92, 246, 1)\",\n                    ],\n                    borderWidth: 1,\n                  },\n                ],\n              });\n          }\n        } catch (error) {\n          console.error(\"Error fetching sleep data:\", error);\n        }\n        \n        // Fetch weekly summary\n        try {\n          const summaryData = await healthAPI.getWeeklySummary();\n          if (summaryData && summaryData.summary) {\n            setWeeklySummary({\n              summary: summaryData.summary,\n              trends: summaryData.trends || {\n                steps: 0,\n                sleep: 0,\n                heart_rate: 0,\n                weight: 0,\n                calories: 0,\n                active_minutes: 0\n              },\n              status: summaryData.status || 'success'\n            });\n          } else {\n            setWeeklySummary(null);\n          }\n        } catch (error) {\n          console.error(\"Error fetching weekly summary:\", error);\n          setWeeklySummary(null);\n        }\n      } catch (error) {\n        console.error(\"Error fetching dashboard data:\", error);\n        setAiRecommendations({\n          summary: \"Unable to fetch recommendations. Please check your connection.\",\n          insights: [\n            \"Make sure you have granted all necessary permissions.\",\n            \"Try refreshing the page.\",\n            \"Check your internet connection and try again.\",\n            \"Contact support if the issue persists.\",\n          ]\n        });\n        setIsAiOnline(false);\n        setHealthFacts([]);\n        setChartData({\n          labels: [],\n          datasets: [\n            {\n              label: \"Steps\",\n              data: [],\n              borderColor: \"#1e3a8a\",\n              backgroundColor: \"rgba(30, 58, 138, 0.2)\",\n              tension: 0.4,\n            },\n          ],\n        });\n        setWeeklySummary(null);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Function to render trend icon\n  const renderTrendIcon = (trend: string) => {\n    switch (trend) {\n      case \"up\":\n        return <span className=\"text-green-500\">↑</span>;\n      case \"down\":\n        return <span className=\"text-red-500\">↓</span>;\n      case \"stable\":\n        return <span className=\"text-blue-500\">→</span>;\n      default:\n        return null;\n    }\n  };\n\n  const handleAddMetric = async (metric: string) => {\n    setSelectedMetric(metric);\n    setIsAddMenuOpen(false);\n  };\n\n  const handleSubmitMetric = async () => {\n    if (!selectedMetric || !metricValue) return;\n\n    setIsSubmitting(true);\n    try {\n      await healthAPI.addMetric(selectedMetric, parseFloat(metricValue));\n      \n      // Reset form\n      setMetricValue(\"\");\n      setSelectedMetric(null);\n      \n      // Refresh metrics data\n      const metricsData = await healthAPI.getMetrics();\n      setMetrics({\n        steps: { value: metricsData.steps || 0, trend: \"stable\" },\n        sleep: { value: metricsData.sleep || 0, trend: \"stable\" },\n        heartRate: { value: metricsData.heart_rate || 0, trend: \"stable\" },\n        weight: { value: metricsData.weight || 0, trend: \"stable\" },\n        calories: { value: metricsData.calories || 0, trend: \"stable\" },\n        activeMinutes: { value: metricsData.activity_minutes || 0, trend: \"stable\" },\n      });\n    } catch (error) {\n      console.error(\"Error adding metric:\", error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-100 dark:bg-gray-900\">\n      <Sidebar />\n      <div className={`flex-1 transition-all duration-300 ${isSidebarOpen ? \"ml-64\" : \"ml-24\"} p-8 overflow-y-auto`}>\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-3xl font-semibold text-gray-800 dark:text-white\">Dashboard</h1>\n          <div className=\"flex items-center space-x-4\">\n            {/* <AIStatus isOnline={isAiOnline} /> */}\n            <button \n              onClick={handleToggleTheme} \n              className=\"p-2 bg-blue-600 hover:bg-blue-700 text-white rounded-full transition-colors\"\n              aria-label={darkMode ? \"Switch to light mode\" : \"Switch to dark mode\"}\n            >\n              {darkMode ? <FaSun className=\"h-5 w-5\" /> : <FaMoon className=\"h-5 w-5\" />}\n            </button>\n          </div>\n        </div>\n\n        {/* Health Interpreter - Hidden as it's accessed via floating button */}\n        <HealthInterpreter />\n\n        {isLoading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-600\"></div>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            {/* AI Recommendations */}\n            <div className=\"p-6 bg-gradient-to-r from-blue-600 to-blue-800 dark:from-blue-800 dark:to-blue-900 rounded-lg shadow-lg text-white\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center\">\n                  <FaBrain className=\"text-2xl mr-3\" />\n                  <h2 className=\"text-xl font-bold\">AI Health Recommendations</h2>\n                </div>\n                <AIStatus isOnline={isAiOnline} />\n              </div>\n              {aiRecommendations && (\n                <>\n                  <p className=\"text-lg mb-4\">{aiRecommendations.summary}</p>\n                  <div className=\"bg-white/10 backdrop-blur-sm p-4 rounded-lg\">\n                    <h3 className=\"font-semibold mb-2\">Additional Insights:</h3>\n                    <ul className=\"list-disc list-inside space-y-1\">\n                      {aiRecommendations.insights.map((tip, index) => (\n                        <li key={index}>{tip}</li>\n                      ))}\n                    </ul>\n                  </div>\n                </>\n              )}\n              <div className=\"mt-4 text-sm text-blue-100\">\n                <FaInfoCircle className=\"inline-block mr-1\" />\n                Recommendations are personalized based on your health data and goals\n              </div>\n            </div>\n\n            {/* Metrics Grid */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {/* Steps */}\n              <Link to=\"/metrics/steps\" className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <FaWalking className=\"text-blue-600 text-2xl mr-3\" />\n                    <div>\n                      <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Steps</h2>\n                      <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                        {metrics.steps.value.toLocaleString()} {renderTrendIcon(metrics.steps.trend)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n\n              {/* Sleep */}\n              <Link to=\"/metrics/sleep\" className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <FaBed className=\"text-indigo-600 text-2xl mr-3\" />\n                    <div>\n                      <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Sleep</h2>\n                      <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                        {metrics.sleep.value} hrs {renderTrendIcon(metrics.sleep.trend)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n\n              {/* Heart Rate */}\n              <Link to=\"/metrics/heart-rate\" className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <FaHeartbeat className=\"text-red-600 text-2xl mr-3\" />\n                    <div>\n                      <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Heart Rate</h2>\n                      <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                        {metrics.heartRate.value} bpm {renderTrendIcon(metrics.heartRate.trend)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n\n              {/* Weight */}\n              <Link to=\"/metrics/weight\" className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <FaWeight className=\"text-green-600 text-2xl mr-3\" />\n                    <div>\n                      <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Weight</h2>\n                      <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                        {metrics.weight.value} kg {renderTrendIcon(metrics.weight.trend)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n\n              {/* Calories */}\n              <Link to=\"/metrics/calories\" className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <FaAppleAlt className=\"text-orange-600 text-2xl mr-3\" />\n                    <div>\n                      <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Calories</h2>\n                      <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                        {metrics.calories.value} kcal {renderTrendIcon(metrics.calories.trend)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n\n              {/* Active Minutes */}\n              <Link to=\"/metrics/active-minutes\" className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <FaRunning className=\"text-emerald-600 text-2xl mr-3\" />\n                    <div>\n                      <h2 className=\"text-lg font-semibold text-gray-800 dark:text-white\">Active Minutes</h2>\n                      <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                        {metrics.activeMinutes.value} min {renderTrendIcon(metrics.activeMinutes.trend)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </div>\n\n            {/* Graphs Section */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Steps Graph */}\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n                <h2 className=\"text-lg font-bold text-gray-800 dark:text-white mb-4\">Weekly Steps</h2>\n                {chartData ? (\n                  <Line\n                    data={chartData}\n                    options={{\n                      responsive: true,\n                      plugins: {\n                        legend: {\n                          display: false,\n                        },\n                        tooltip: {\n                          mode: \"index\",\n                          intersect: false,\n                        },\n                      },\n                      scales: {\n                        y: {\n                          beginAtZero: false,\n                          grid: {\n                            color: darkMode ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\",\n                          },\n                        },\n                        x: {\n                          grid: {\n                            display: false,\n                          },\n                        },\n                      },\n                    }}\n                  />\n                ) : (\n                  <p className=\"text-gray-600 dark:text-gray-400 mt-2\">Loading chart data...</p>\n                )}\n              </div>\n\n              {/* Weekly Activity */}\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n                <h2 className=\"text-lg font-bold text-gray-800 dark:text-white mb-4\">Weekly Activity</h2>\n                <Bar\n                  data={weeklyActivityData}\n                  options={{\n                    responsive: true,\n                    plugins: {\n                      legend: {\n                        display: false,\n                      },\n                    },\n                    scales: {\n                      y: {\n                        beginAtZero: true,\n                        grid: {\n                          color: darkMode ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\",\n                        },\n                        title: {\n                          display: true,\n                          text: \"Minutes\",\n                        },\n                      },\n                      x: {\n                        grid: {\n                          display: false,\n                        },\n                      },\n                    },\n                  }}\n                />\n              </div>\n\n              {/* Sleep Breakdown */}\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n                <h2 className=\"text-lg font-bold text-gray-800 dark:text-white mb-4\">Sleep Breakdown</h2>\n                <div className=\"flex items-center justify-center\">\n                  <div style={{ width: \"70%\", height: \"auto\" }}>\n                    <Doughnut\n                      data={sleepBreakdownData}\n                      options={{\n                        responsive: true,\n                        plugins: {\n                          legend: {\n                            position: \"right\",\n                            labels: {\n                              color: darkMode ? \"#f3f4f6\" : \"#1f2937\",\n                            },\n                          },\n                        },\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Health Facts */}\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n                <h2 className=\"text-lg font-bold text-gray-800 dark:text-white mb-4\">Health Facts</h2>\n                <div className=\"space-y-4\">\n                  {healthFacts.length > 0 ? (\n                    <>\n                      {healthFacts.slice(0, showAllFacts ? 5 : 3).map((fact, index) => (\n                        <div key={index} className=\"flex items-start\">\n                          <div className=\"flex-shrink-0 w-8 h-8 flex items-center justify-center bg-blue-100 dark:bg-blue-900 rounded-full mr-3\">\n                            <span className=\"text-blue-600 dark:text-blue-300 font-bold\">{index + 1}</span>\n                          </div>\n                          <p className=\"text-gray-700 dark:text-gray-300\">{fact}</p>\n                        </div>\n                      ))}\n                      {healthFacts.length > 3 && (\n                        <button \n                          onClick={() => setShowAllFacts(!showAllFacts)}\n                          className=\"text-blue-600 dark:text-blue-400 hover:underline text-sm\"\n                        >\n                          {showAllFacts ? \"Show less\" : \"View more health facts\"}\n                        </button>\n                      )}\n                    </>\n                  ) : (\n                    <p className=\"text-gray-600 dark:text-gray-400\">Connect your health account to see interesting health facts.</p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Weekly Summary */}\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-700\">\n              <h2 className=\"text-lg font-bold text-gray-800 dark:text-white mb-4\">Weekly Summary</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {weeklySummary ? (\n                  <>\n                    <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\n                      <h3 className=\"font-medium text-gray-800 dark:text-white mb-2\">Active minutes</h3>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        {weeklySummary.summary[0] || \"No activity data available\"}\n                      </p>\n                    </div>\n                    <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\n                      <h3 className=\"font-medium text-gray-800 dark:text-white mb-2\">Sleep Analysis</h3>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        {weeklySummary.summary[1] || \"No sleep data available\"}\n                      </p>\n                    </div>\n                    <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\n                      <h3 className=\"font-medium text-gray-800 dark:text-white mb-2\">Heart Health</h3>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        {weeklySummary.summary[2] || \"No heart rate data available\"}\n                      </p>\n                    </div>\n                  </>\n                ) : (\n                  <div className=\"col-span-3 text-center p-4\">\n                    <p className=\"text-gray-600 dark:text-gray-400\">\n                      {isLoading ? \"Loading weekly summary...\" : \"No weekly summary data available. Please check your health data connections.\"}\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Floating Action Buttons */}\n      <div className=\"fixed bottom-8 right-8 z-50\">\n        <div className=\"flex flex-col gap-4 items-end\">\n          {/* Health Interpreter Button */}\n          <button\n            onClick={() => {\n              const healthInterpreterModal = document.querySelector('[data-health-interpreter]');\n              if (healthInterpreterModal) {\n                (healthInterpreterModal as HTMLButtonElement).click();\n              }\n            }}\n            className=\"w-14 h-14 bg-purple-600 hover:bg-purple-700 text-white rounded-full shadow-lg flex items-center justify-center transition-all duration-300 transform hover:scale-110\"\n            aria-label=\"Ask about health metrics\"\n            title=\"Ask about health metrics\"\n          >\n            <FaBrain className=\"text-xl\" />\n          </button>\n          \n          {/* Add Metric Button */}\n          <div className=\"relative\">\n            <button\n              onClick={() => setIsAddMenuOpen(!isAddMenuOpen)}\n              className=\"w-14 h-14 bg-blue-600 hover:bg-blue-700 text-white rounded-full shadow-lg flex items-center justify-center transition-all duration-300 transform hover:scale-110\"\n              aria-label=\"Add health metric\"\n              title=\"Add health metric\"\n            >\n              <FaPlus className=\"text-xl\" />\n            </button>\n\n          {/* Dropdown Menu */}\n          {isAddMenuOpen && (\n            <div className=\"absolute bottom-16 right-0 w-48 bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 overflow-hidden\">\n              <button\n                onClick={() => handleAddMetric(\"steps\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaWalking className=\"mr-2\" /> Steps\n              </button>\n              <button\n                onClick={() => handleAddMetric(\"sleep\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaBed className=\"mr-2\" /> Sleep\n              </button>\n              <button\n                onClick={() => handleAddMetric(\"heartRate\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaHeartbeat className=\"mr-2\" /> Heart Rate\n              </button>\n              <button\n                onClick={() => handleAddMetric(\"weight\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaWeight className=\"mr-2\" /> Weight\n              </button>\n              <button\n                onClick={() => handleAddMetric(\"calories\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaAppleAlt className=\"mr-2\" /> Calories\n              </button>\n              <button\n                onClick={() => handleAddMetric(\"activeMinutes\")}\n                className=\"w-full px-4 py-2 text-left text-gray-800 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <FaRunning className=\"mr-2\" /> Active Minutes\n              </button>\n            </div>\n          )}\n\n          {/* Metric Input Modal */}\n          {selectedMetric && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-xl w-96\">\n                <h3 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">\n                  Add {selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)}\n                </h3>\n                <input\n                  type=\"number\"\n                  value={metricValue}\n                  onChange={(e) => setMetricValue(e.target.value)}\n                  placeholder={`Enter ${selectedMetric} value`}\n                  className=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                />\n                <div className=\"mt-4 flex justify-end space-x-2\">\n                  <button\n                    onClick={() => {\n                      setSelectedMetric(null)\n                      setMetricValue(\"\")\n                    }}\n                    className=\"px-4 py-2 text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-md\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleSubmitMetric}\n                    disabled={isSubmitting || !metricValue}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {isSubmitting ? \"Adding...\" : \"Add\"}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n    </div>\n  )\n}"],"names":["Chart","registerables","setRef","ref","value","composeRefs","refs","node","hasCleanup","cleanups","cleanup","Slot","React.forwardRef","props","forwardedRef","children","slotProps","childrenArray","React.Children","slottable","isSlottable","newElement","newChildren","child","React.isValidElement","jsx","SlotClone","React.cloneElement","childrenRef","getElementRef","props2","mergeProps","React.Fragment","Slottable","Fragment2","childProps","overrideProps","propName","slotPropValue","childPropValue","args","element","getter","_a","mayWarn","_b","falsyToString","cx","clsx","cva","base","config","_config_compoundVariants","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","key","getCompoundVariantClassNames","cvClass","cvClassName","compoundVariantOptions","buttonVariants","Button","className","size","asChild","Comp","cn","Input","type","HealthInterpreter","message","setMessage","useState","response","setResponse","isLoading","setIsLoading","showModal","setShowModal","expandedSection","setExpandedSection","history","setHistory","metricSuggestions","showSuggestions","setShowSuggestions","parseResponse","text","sections","section","measurements","normalRanges","implications","recommendations","medicalAdvice","sectionText","handleSubmit","e","data","healthAPI","parsedResponse","prev","error","toggleSection","handleSuggestionClick","example","jsxs","Fragment","FaTimes","suggestion","index","FaChevronUp","FaChevronDown","FaHistory","item","Dashboard","isSidebarOpen","useSidebar","darkMode","setDarkMode","aiRecommendations","setAiRecommendations","healthFacts","setHealthFacts","chartData","setChartData","isAiOnline","setIsAiOnline","metrics","setMetrics","showAllFacts","setShowAllFacts","weeklySummary","setWeeklySummary","isAddMenuOpen","setIsAddMenuOpen","selectedMetric","setSelectedMetric","metricValue","setMetricValue","isSubmitting","setIsSubmitting","sleepBreakdownData","setSleepBreakdownData","weeklyActivityData","setWeeklyActivityData","useEffect","userData","username","parsedUser","initialDarkMode","getInitialTheme","handleToggleTheme","newDarkMode","toggleTheme","err","factsData","metricsData","stepsData","activityData","sleepData","summaryData","renderTrendIcon","trend","handleAddMetric","metric","handleSubmitMetric","Sidebar","FaSun","FaMoon","FaBrain","AIStatus","tip","FaInfoCircle","Link","FaWalking","FaBed","FaHeartbeat","FaWeight","FaAppleAlt","FaRunning","Line","Bar","Doughnut","fact","healthInterpreterModal","FaPlus"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}