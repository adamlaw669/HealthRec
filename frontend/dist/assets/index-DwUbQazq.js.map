{"version":3,"file":"index-DwUbQazq.js","sources":["../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/react-chartjs-2/dist/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.8\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","b","h2","eq","isShort","hexParse","str","len","ret","alpha","a","f","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","r","g","d","max","rgb2hsl","min","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","type","obj","color","weight","c1","c2","w2","p","w1","val","noop","uid","id","isNullOrUndef","value","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNonPrimitive","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","vScale","_parsed","spanGaps","axis","minDefined","maxDefined","distanceToDefinedLo","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","remain","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_longestText","arrayOfThings","cache","jlen","thing","nestedThing","gcLen","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","parsed","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","replacer","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","duration","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","bars","reset","horizontal","vpixels","ipixels","dataIndex","currentParsed","iScaleValue","skipNull","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","getter","chartArea","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","pointStyle","label","legendItem","legend","LineController","_dataset","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","lastPoint","PolarAreaController","minSize","datasetStartAngle","defaultAngle","PieController","RadarController","pointPosition","ScatterController","showLine","controllers","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart$1","_a","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","clip","useClip","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","Chart","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawBorder","borderWidth","borderJoinStyle","inner","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","outer","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","xAxis","threshold","_segments","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_loop","_shouldApplyFill","_resolveTarget","propagate","fill","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","ci","usePointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","plugin_subtitle","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","significand","lastTick","LogarithmicScale","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","pointLabelOpts","additionalAngle","plFont","hLimits","vLimits","updateLimits","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","centerPointLabels","drawPointLabelBox","backdropColor","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","angleLines","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","registerables","defaultDatasetIdKey","reforwardRef","ref","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","destroyChart","useEffect","React","forwardRef","createTypedChart","Line","Bar","Doughnut"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}